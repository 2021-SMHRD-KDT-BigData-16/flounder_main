 * 질병진단 서비스 페이지 기능 구현.
  1-1. 이클립스 톰캣 서버에서 파이썬 플라스크 서버에 사진 전송
  1-2. 플라스크 서버에서 받아서 YOLO 모델에서 객체감지
  1-3. 객체감지 결과를 분석해서 질병 진단
  1-4. 질병진단 결과를 톰캣서버에 전달.
  1-5. 톰캣서버에서 결과 보여주기 및 내용 입력 받기.
  1-6. MySQL DB 서버에 진단 결과 저장

  1) 문제 - 1-4. 플라스크 서버에서 톰캣 서버로 결과 전달 - Error
    - 플라스크 서버에서 톰캣 서버로 이미지 파일을 전달 - Error

  해결 
    - 플라스크 서버와 톰캣서버의 파일 저장 경로를 같은 경로로 설정.
    - 이미지 파일 저장 경로를 문자열로 전달 - OK
    
  2) 문제 - 1-5. 진단결과 보여주기 - Error
       - 1-6. MySQL DB 서버에 진단 결과 저장 - Error

  해결 
    - 원인 : 톰캣의 파일 저장 및 결과가 이클립스에서 실행시 바로 반영되지 않음.
    - 톰캣 서버에 웹페이지를 배포용으로 만들어서 이클립스없이 바로 실행시킴 - OK
    
--------------------------------------------------------------------    
    
  3) 문제 : 프로젝트 소스의 공유 및 통합.
       - 팀원 각자 개발한 소스를 GitHub 에서 공유
       - GitHub 공유폴더에 Push, Pull 할때 소스 수정 부분이 충돌하여 동작에 이상.
  해결 
    - GitHub 에서 각자 폴더를 따로 만들어서 작업 후 Push & Pull
    - 통합 폴더를 별도로 만들어서 주기적으로 모든 소스 통합.
    
  4) 문제 : 프로젝트 소스의 통합시 충돌 발생
  
  해결 
    - GitHub 통합 폴더에 팀원들이 개발
    - 각자 개발후 Commit, Push 전에 모든 팀원에게 알림.
    - Push 하기전에 Pull 하고 수정내용 충돌 발생시 다른 팀원과 같이 통합.
       
  5) 문제 : 
    - GPU 적용 에러
    - YOLO Tutorial 소스 동작 에러
    
  해결 
    - 그래픽드라이버, 아나콘다, CUDA, CuDnn 모두 삭제
    - 그래픽드라이버, 아나콘다, CUDA, CuDnn 순서 대로 설치.
    - YOLO 관련 라이브러리 import.
    